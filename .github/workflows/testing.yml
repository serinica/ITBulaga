# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
    paths:
    - mapquest_parse-json_7.py
    - test_lint.py

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    name: automated-testing

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with Lint
      run: |
        python test_lint.py
        # stop the build if there are Python syntax errors or undefined names
        
        
    - name: Test Success
      run: |
        # if: "test_lint.py" == "true"
        #github.event.push
        #commit and push changed files to the repository.
        #git config --global user.name "palomamarie"
        #git config --global user.email "palomamarie.cipriano.cics@ust.edu.ph"
        #git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
        #git push
        echo "Changes has been committed" 
        
   # - name: Test with pytest
    #  run: |
    #    pytest
